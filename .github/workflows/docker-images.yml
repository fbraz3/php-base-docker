name: Build All Docker Images

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * 0'

jobs:
  build_images:
    runs-on: ubuntu-latest
#    continue-on-error: true
    strategy:
      matrix:
        include:
          - php_version: '8.4'
            architecture: linux/amd64
            is_latest: true
          - php_version: '8.4'
            architecture: linux/arm64
            is_latest: true
          - php_version: '8.3'
            architecture: linux/amd64
            is_latest: false
          - php_version: '8.3'
            architecture: linux/arm64
            is_latest: false
          - php_version: '8.2'
            architecture: linux/amd64
            is_latest: false
          - php_version: '8.2'
            architecture: linux/arm64
            is_latest: false
          - php_version: '8.1'
            architecture: linux/amd64
            is_latest: false
          - php_version: '8.1'
            architecture: linux/arm64
            is_latest: false
          - php_version: '8.0'
            architecture: linux/amd64
            is_latest: false
          - php_version: '8.0'
            architecture: linux/arm64
            is_latest: false
          - php_version: '7.4'
            architecture: linux/amd64
            is_latest: false
          - php_version: '7.4'
            architecture: linux/arm64
            is_latest: false
          - php_version: '7.3'
            architecture: linux/amd64
            is_latest: false
          - php_version: '7.3'
            architecture: linux/arm64
            is_latest: false
          - php_version: '7.2'
            architecture: linux/amd64
            is_latest: false
          - php_version: '7.2'
            architecture: linux/arm64
            is_latest: false
          - php_version: '7.1'
            architecture: linux/amd64
            is_latest: false
          - php_version: '7.1'
            architecture: linux/arm64
            is_latest: false
          - php_version: '7.0'
            architecture: linux/amd64
            is_latest: false
          - php_version: '7.0'
            architecture: linux/arm64
            is_latest: false
          - php_version: '5.6'
            architecture: linux/amd64
            is_latest: false
          - php_version: '5.6'
            architecture: linux/arm64
            is_latest: false

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Prepare architecture name
        id: prep
        run: echo "arch_short=${ARCH##*/}" >> $GITHUB_OUTPUT
        env:
          ARCH: ${{ matrix.architecture }}

      - name: Build PHP Docker image
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.architecture }}
          context: .
          file: flavors/vanilla/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            PHP_VERSION=${{ matrix.php_version }}
          tags: |
            fbraz3/php-cli:${{ matrix.php_version }}
            ${{ matrix.is_latest && 'fbraz3/php-cli:latest' || '' }}

      - name: Test php image to check if version matches
        run: |
          docker run --rm --platform=${{ matrix.architecture }} fbraz3/php-cli:${{ matrix.php_version }} -v | grep -q "${{ matrix.php_version }}" || exit 1
        env:
          PHP_VERSION: ${{ matrix.php_version }}

      - name: Build Phalcon image
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.architecture }}
          context: .
          file: flavors/phalcon/Dockerfile
          push: true
          cache-from: type=gha
          build-args: |
            PHP_VERSION=${{ matrix.php_version }}
            BUILD_ARCH=${{ steps.prep.outputs.arch_short }}
          tags: |
            fbraz3/php-cli:${{ matrix.php_version }}-phalcon
            ${{ matrix.is_latest && 'fbraz3/php-cli:latest-phalcon' || '' }}

      - name: Test php modules to ensure phalcon is loaded
        run: |
          docker run --rm --platform=${{ matrix.architecture }} fbraz3/php-cli:${{ matrix.php_version }}-phalcon -v | grep -q "${{ matrix.php_version }}" || exit 1
          docker run --rm --platform=${{ matrix.architecture }} fbraz3/php-cli:${{ matrix.php_version }}-phalcon -m | grep -q "phalcon" || exit 1
        env:
          PHP_VERSION: ${{ matrix.php_version }}

      - name: Build Composer Image
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.architecture }}
          context: .
          file: flavors/composer/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            PHP_VERSION=${{ matrix.php_version }}
            BUILD_ARCH=${{ steps.prep.outputs.arch_short }}
          tags: |
            fbraz3/php-composer:${{ matrix.php_version }}
            ${{ matrix.is_latest && 'fbraz3/php-composer:latest' || '' }}

      - name: Test composer to ensure it loads properly
        run: |
          docker run --rm --platform=${{ matrix.architecture }} fbraz3/php-composer:${{ matrix.php_version }} -v 2>&1 | grep -q "Composer version " || exit 1
        env:
          PHP_VERSION: ${{ matrix.php_version }}

      - name: Build wp-cli image
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.architecture }}
          context: .
          file: flavors/wp-cli/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            PHP_VERSION=${{ matrix.php_version }}
            BUILD_ARCH=${{ steps.prep.outputs.arch_short }}
          tags: |
            fbraz3/wp-cli:${{ matrix.php_version }}
            ${{ matrix.is_latest && 'fbraz3/wp-cli:latest' || '' }}

      - name: Test wp-cli to ensure it loads properly
        run: |
          docker run --rm --platform=${{ matrix.architecture }} fbraz3/wp-cli:${{ matrix.php_version }} --version 2>&1 | grep -q "WP-CLI" || exit 1
        env:
          PHP_VERSION: ${{ matrix.php_version }}

      - name: Build Symfony image
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.architecture }}
          context: .
          file: flavors/symfony/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            PHP_VERSION=${{ matrix.php_version }}
            BUILD_ARCH=${{ steps.prep.outputs.arch_short }}
          tags: |
            fbraz3/symfony-cli:${{ matrix.php_version }}
            ${{ matrix.is_latest && 'fbraz3/symfony-cli:latest' || '' }}

      - name: Test Symfony with -v to ensure it loads properly
        run: |
          docker run --rm --platform=${{ matrix.architecture }} fbraz3/symfony-cli:${{ matrix.php_version }} -v 2>&1 | grep -q "symfony" || exit 1
        env:
          PHP_VERSION: ${{ matrix.php_version }}